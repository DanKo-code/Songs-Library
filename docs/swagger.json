{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/songs": {
            "get": {
                "description": "Fetch a list of songs from the library with filtering options such as name, group name, release date, text, link, and pagination. Each song can be filtered based on the available query parameters.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Retrieve a list of songs",
                "parameters": [
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "Name of the song",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "Name of the group",
                        "name": "group_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Release date of the song",
                        "name": "release_date",
                        "in": "query"
                    },
                    {
                        "maxLength": 10000,
                        "type": "string",
                        "description": "Lyrics of the song",
                        "name": "text",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "url",
                        "description": "Link to the song",
                        "name": "link",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Number of songs per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of songs",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Song"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Songs not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new song in the library by providing song details in the request body. The group and song name will be converted to lowercase before saving.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Create a new song",
                "parameters": [
                    {
                        "description": "Details of the song to create",
                        "name": "createSongDTO",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateSongDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created song details",
                        "schema": {
                            "$ref": "#/definitions/models.Song"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Song already exists",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/songs/{id}": {
            "put": {
                "description": "Update the details of a song in the library using its UUID. The song ID should be in UUID format. The request body should contain the fields to be updated.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Update a song by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID of the song to update",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fields to update",
                        "name": "fieldsToUpdate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateSongsDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated song details",
                        "schema": {
                            "$ref": "#/definitions/models.Song"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Song not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a song from the library using its UUID. The song ID should be in UUID format.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Delete a song by its ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID of the song to delete",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted song details",
                        "schema": {
                            "$ref": "#/definitions/models.Song"
                        }
                    },
                    "400": {
                        "description": "Invalid song ID format",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Song not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/songs/{id}/lyrics": {
            "get": {
                "description": "Fetch the lyrics of a specific song identified by its ID. Optional query parameters can be used to filter the results further.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Songs"
                ],
                "summary": "Retrieve lyrics of a song",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the song",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Number of songs per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lyrics of the song",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Song not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.CreateSongDTO": {
            "type": "object",
            "properties": {
                "group": {
                    "type": "string",
                    "maxLength": 100
                },
                "song": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "dtos.UpdateSongsDTO": {
            "type": "object",
            "properties": {
                "group_name": {
                    "type": "string",
                    "maxLength": 100
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "release_date": {
                    "type": "string"
                },
                "text": {
                    "type": "string",
                    "maxLength": 10000
                }
            }
        },
        "models.Song": {
            "type": "object",
            "properties": {
                "groupName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "releaseDate": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        }
    }
}